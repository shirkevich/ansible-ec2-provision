- ec2_ami_find:
    name: "ubuntu/images/ebs/ubuntu-trusty-14.04-amd64-server-*"
    owner: 099720109477
    sort: name
    sort_order: descending
    sort_end: 1
    region: "{{ aws_region }}"
  register: ami_find

- debug: msg="{{ ami_find }}"

- name: provision local user key
  ec2_key:
    name: "{{ ansible_user_id }}"
    key_material: "{{ item }}"
  with_file: ~/.ssh/id_rsa.pub

- ec2_vpc:
    state: present
    cidr_block: "{{ aws_vpc_cidr_block }}"
    resource_tags: { "Environment":"Development" }
    internet_gateway: yes
    subnets: "{{ aws_vpc_subnets }}"
    route_tables: "{{ aws_vpc_route_tables }}"
  register: vpc

# - debug: msg="{{ vpc }}"

- ec2_group:
    name: "{{ aws_sg_name }}"
    description: "{{ aws_sg_description }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: "{{ aws_sg_rules }}"
  register: sg

# - debug: msg="{{ sg }}"

- ec2:
    image: "{{ ami_find.results[0].ami_id }}"
    instance_type: "{{ aws_instance_type }}"
    instance_tags: "{{ aws_instance_tags }}"
    group:
      - "{{ aws_sg_name }}"
    key_name: "{{ ansible_user_id }}"
    assign_public_ip: yes
    vpc_subnet_id: "{{ vpc.subnets[0].id }}"
    wait: yes
  register: ec2

# - debug: msg="{{ ec2 }}"

- name: Add Server to inventory
  local_action: add_host hostname={{ item.public_ip }} groupname=tag_role_nodejs
  with_items: ec2.instances

- name: Waiting for SSH to come up
  local_action: wait_for host={{item.public_ip}} port=22 delay=10 timeout=120 state=started
  with_items: ec2.instances
